name: ci

on: [push, pull_request]

jobs:
  # test-linux:
  #   name: Linux PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
  #   runs-on: ubuntu-20.04

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       php: [7.4, '8.0', 8.1]
  #       swoole: ['4.8.6']
  #       tdengine: ['2.4.0.3']

  #   env:
  #     TDENGINE_VERSION: ${{ matrix.tdengine }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build TDengine
  #       run: sudo -E bash .github/script/build-tdengine.sh

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php }}
  #         tools: pecl
  #         extensions: >
  #           :xdebug
  #           openssl, mbstring, json, sockets,
  #           swoole-swoole/swoole-src@v${{ matrix.swoole }}
  #       env:
  #         SWOOLE_CONFIGURE_OPTS: >
  #           --enable-openssl
  #           --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

  #     - name: Build extension
  #       run: ./make.sh

  #     - name: Test
  #       run: ./run-tests.sh

  test-windows:
    name: Windows PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }}
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        # php: [7.4, '8.0', 8.1]
        php: [8.1]
        tdengine: ['2.4.0.3']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}

    steps:
      - uses: actions/checkout@v2

      - name: Docker
        run: |
          docker info
          Set-Content -Value "`{`"experimental`":true`}" -Path C:\ProgramData\docker\config\daemon.json
          restart-service docker
          docker info
          cd .github
          docker-compose up -d

      - name: Download TDengine
        run: .github\script\download-tdengine.ps1

      - name: Build TDengine
        shell: cmd
        run: .github\script\build-tdengine.bat

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,

      - name: Build extension
        uses: ./.github/workflows/winext
        with:
          ext-path: .
          tools-path: C:\tools\phpdev
          ext-name: tdengine

      - name: Test
        run: ./run-tests.ps1

  test-macos:
    name: MacOS PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
    runs-on: macos-10.15

    strategy:
      fail-fast: false
      matrix:
        # php: [7.4, '8.0', 8.1]
        php: [8.1]
        swoole: ['4.8.6']
        tdengine: ['2.4.0.3']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}

    steps:
      - uses: actions/checkout@v2
      # - uses: docker-practice/actions-setup-docker@v1

      - name: Build TDengine
        run: .github/script/build-tdengine-macos.sh

      - name: Docker
        run: |
          cd .github
          docker-compose up -d

      - name: Get Openssl Dir
        id: opecssl-dir
        run: echo "::set-output name=path::$(brew --prefix openssl@1.1)"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,
            swoole-swoole/swoole-src@v${{ matrix.swoole }}
        env:
          SWOOLE_CONFIGURE_OPTS: >
            --enable-openssl
            --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

      - name: Build extension
        run: |
          phpize
          ./configure --enable-swoole --with-tdengine-dir=/usr/local/Cellar/tdengine/$TDENGINE_VERSION
          make -j
          make install

      - name: Test
        run: ./run-tests.sh
