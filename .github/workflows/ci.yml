name: ci

on: [push, pull_request]

jobs:
  # test-linux:
  #   name: Linux PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
  #   runs-on: ubuntu-20.04

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       php: [7.4, '8.0', 8.1]
  #       swoole: ['4.8.6']
  #       tdengine: ['2.3.6.0']

  #   env:
  #     TDENGINE_VERSION: ${{ matrix.tdengine }}

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Build TDengine
  #       run: sudo -E bash .github/script/build-tdengine.sh

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php }}
  #         tools: pecl
  #         extensions: >
  #           :xdebug
  #           openssl, mbstring, json, sockets,
  #           swoole-swoole/swoole-src@v${{ matrix.swoole }}
  #       env:
  #         SWOOLE_CONFIGURE_OPTS: >
  #           --enable-openssl
  #           --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

  #     - name: Build extension
  #       run: ./make.sh

  #     - name: Test
  #       run: ./run-tests.sh

  test-windows:
    name: Windows PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }}
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        # php: [7.4, '8.0', 8.1]
        php: [8.1]
        tdengine: ['2.3.6.0']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}

    steps:
      - uses: actions/checkout@v2

      - name: Download TDengine
        run: .github\script\download-tdengine.ps1

      - name: Build TDengine
        shell: cmd
        run: .github\script\build-tdengine.bat

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,

      - name: Copy
        run: Copy-Item "C:\\TDengine\\driver\\taos.dll" "C:\\tools\\php\\ext"

      - name: Build extension
        uses: ./.github/workflows/winext
        with:
          ext-path: .
          tools-path: C:\tools\phpdev
          ext-name: tdengine

      # - name: Test
      #   run: ./run-tests.ps1

      # - name: Download
      #   if: failure()
      #   run: Invoke-WebRequest https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
      # - name: Extract
      #   if: failure()
      #   run: Expand-Archive ngrok.zip
      # - name: Auth
      #   if: failure()
      #   run: .\ngrok\ngrok.exe authtoken $Env:NGROK_TOKEN
      #   env:
      #     NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
      # - name: Enable TS
      #   if: failure()
      #   run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
      # - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
      #   if: failure()
      # - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
      #   if: failure()
      # - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
      #   if: failure()
      # - name: Create Tunnel
      #   if: failure()
      #   run: .\ngrok\ngrok.exe tcp 3389

  test-macos:
    name: MacOS PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        # php: [7.4, '8.0', 8.1]
        php: [8.1]
        swoole: ['4.8.6']
        tdengine: ['2.3.6.0']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}

    steps:
      - uses: actions/checkout@v2

      - name: Build TDengine
        run: sudo -E bash .github/script/build-tdengine.sh

      - name: Get Openssl Dir
        id: opecssl-dir
        run: echo "::set-output name=path::$(brew --prefix openssl@1.1)"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,
            swoole-swoole/swoole-src@v${{ matrix.swoole }}
        env:
          SWOOLE_CONFIGURE_OPTS: >
            --enable-openssl
            --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

      - name: Build extension
        run: |
          phpize
          ./configure --enable-swoole --with-tdengine-dir=/usr/local/Cellar/tdengine/$TDENGINE_VERSION
          make -j
          make install

      - name: Test
        run: ./run-tests.sh
