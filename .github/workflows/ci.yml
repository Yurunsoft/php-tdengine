name: ci

on: [push, pull_request]

jobs:
  test-linux:
    name: Linux PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        php: [7.4, '8.0', 8.1]
        swoole: ['5.0.0', '4.8.10']
        tdengine: ['2.4.0.18']
        exclude:
          - php: 7.4
            swoole: '5.0.0'

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}

    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        run: sudo apt update && sudo apt install -y gcc cmake build-essential git libssl-dev

      - name: Build TDengine
        run: sudo -E bash .github/script/build-tdengine.sh

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,
            swoole-swoole/swoole-src@v${{ matrix.swoole }}
        env:
          SWOOLE_CONFIGURE_OPTS: >
            --enable-openssl
            --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

      - name: Build extension
        run: ./make.sh

      - name: Test
        run: ./run-tests.sh

  test-tdengine-linux:
    name: Linux PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        php: [8.1]
        swoole: ['5.0.0']
        tdengine: ['3.0.0.1', '2.6.0.1']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}

    steps:
      - uses: actions/checkout@v2

      - name: Prepare
        run: sudo apt update && sudo apt install -y gcc cmake build-essential git libssl-dev

      - name: Build TDengine
        run: sudo -E bash .github/script/build-tdengine.sh

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,
            swoole-swoole/swoole-src@v${{ matrix.swoole }}
        env:
          SWOOLE_CONFIGURE_OPTS: >
            --enable-openssl
            --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

      - name: Build extension
        run: ./make.sh

      - name: Test
        run: ./run-tests.sh

  test-windows:
    name: Windows PHP-${{ matrix.php.version }} TDengine-${{ matrix.tdengine }}
    runs-on: ${{ matrix.php.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        php:
          - version: '8.0'
            runs-on: windows-2019
            vs: 2019
          - version: 8.1
            runs-on: windows-2019
            vs: 2019
        tdengine: ['2.4.0.18']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}
      VS_VERSION: ${{ matrix.php.vs }}

    steps:
      - uses: actions/checkout@v2

      - name: Download TDengine
        run: .github\script\download-tdengine.ps1

      - name: Build TDengine
        shell: cmd
        run: .github\script\build-tdengine.bat

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php.version }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,

      - name: Build extension
        uses: ./.github/workflows/winext
        with:
          ext-path: .
          tools-path: C:\tools\phpdev
          ext-name: tdengine
      - name: Test
        run: |
          php -m
          php --ri tdengine

  test-tdengine-windows:
    name: Windows PHP-${{ matrix.php.version }} TDengine-${{ matrix.tdengine }}
    runs-on: ${{ matrix.php.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        php:
          - version: 8.1
            runs-on: windows-2019
            vs: 2019
        tdengine: ['3.0.0.1', '2.6.0.1']

    env:
      TDENGINE_VERSION: ${{ matrix.tdengine }}
      VS_VERSION: ${{ matrix.php.vs }}

    steps:
      - uses: actions/checkout@v2

      - name: Download TDengine
        run: .github\script\download-tdengine.ps1

      - name: Build TDengine
        shell: cmd
        run: .github\script\build-tdengine.bat

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php.version }}
          tools: pecl
          extensions: >
            :xdebug
            openssl, mbstring, json, sockets,

      - name: Build extension
        uses: ./.github/workflows/winext
        with:
          ext-path: .
          tools-path: C:\tools\phpdev
          ext-name: tdengine
      - name: Test
        run: |
          php -m
          php --ri tdengine

  # test-macos:
  #   name: MacOS PHP-${{ matrix.php }} TDengine-${{ matrix.tdengine }} Swoole-${{ matrix.swoole }}
  #   runs-on: macos-10.15

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       php: [7.4, '8.0', 8.1]
  #       swoole: ['4.8.10']
  #       tdengine: ['2.4.0.18']

  #   env:
  #     TDENGINE_VERSION: ${{ matrix.tdengine }}

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: docker-practice/actions-setup-docker@1.0.8

  #     - run: echo "127.0.0.1 tdengine" | sudo tee -a /etc/hosts > /dev/null

  #     - name: Build TDengine
  #       run: .github/script/build-tdengine-macos.sh

  #     - name: Docker
  #       run: |
  #         cd .github
  #         docker-compose up -d

  #     - name: Get Openssl Dir
  #       id: opecssl-dir
  #       run: echo "::set-output name=path::$(brew --prefix openssl@1.1)"

  #     - name: Setup PHP
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ matrix.php }}
  #         tools: pecl
  #         extensions: >
  #           :xdebug
  #           openssl, mbstring, json, sockets,
  #           swoole-swoole/swoole-src@v${{ matrix.swoole }}
  #       env:
  #         SWOOLE_CONFIGURE_OPTS: >
  #           --enable-openssl
  #           --with-openssl-dir=${{ steps.opecssl-dir.outputs.path }}

  #     - name: Build extension
  #       run: |
  #         phpize
  #         ./configure --enable-swoole --with-tdengine-dir=/usr/local/Cellar/tdengine/$TDENGINE_VERSION
  #         make -j
  #         make install

  #     - name: Test
  #       run: ./run-tests.sh
